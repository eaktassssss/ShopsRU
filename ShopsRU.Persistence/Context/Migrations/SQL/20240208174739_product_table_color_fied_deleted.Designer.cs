// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopsRU.Persistence.Context.EntityFramework;

#nullable disable

namespace ShopsRU.Persistence.Context.Migrations.SQL
{
    [DbContext(typeof(ShopsRUContext))]
    [Migration("20240208174739_product_table_color_fied_deleted")]
    partial class product_table_color_fied_deleted
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopsRU.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 8, 20, 47, 39, 184, DateTimeKind.Local).AddTicks(3849));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 184, DateTimeKind.Local).AddTicks(4580),
                            IsDeleted = false,
                            Name = "Mutfak"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 184, DateTimeKind.Local).AddTicks(4585),
                            IsDeleted = false,
                            Name = "Mobilya"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 184, DateTimeKind.Local).AddTicks(4587),
                            IsDeleted = false,
                            Name = "Market"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 184, DateTimeKind.Local).AddTicks(4588),
                            IsDeleted = false,
                            Name = "Aydınlatma"
                        });
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 8, 20, 47, 39, 181, DateTimeKind.Local).AddTicks(3018));

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 181, DateTimeKind.Local).AddTicks(3897),
                            CustomerTypeId = 1,
                            FirstName = "EVREN",
                            IsDeleted = false,
                            JoiningDate = new DateTime(2024, 2, 8, 20, 47, 39, 181, DateTimeKind.Local).AddTicks(3901),
                            LastName = "AKTAŞ"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 181, DateTimeKind.Local).AddTicks(3902),
                            CustomerTypeId = 2,
                            FirstName = "ECE",
                            IsDeleted = false,
                            JoiningDate = new DateTime(2024, 2, 8, 20, 47, 39, 181, DateTimeKind.Local).AddTicks(3903),
                            LastName = "DAĞDELEN"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 181, DateTimeKind.Local).AddTicks(3904),
                            CustomerTypeId = 1,
                            FirstName = "İBRAHİM",
                            IsDeleted = false,
                            JoiningDate = new DateTime(2024, 2, 8, 20, 47, 39, 181, DateTimeKind.Local).AddTicks(3905),
                            LastName = "AKIŞIK"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 181, DateTimeKind.Local).AddTicks(3906),
                            CustomerTypeId = 2,
                            FirstName = "GİZEM",
                            IsDeleted = false,
                            JoiningDate = new DateTime(2024, 2, 8, 20, 47, 39, 181, DateTimeKind.Local).AddTicks(3907),
                            LastName = "KURTCUOĞLU"
                        });
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.CustomerDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 8, 20, 47, 39, 180, DateTimeKind.Local).AddTicks(7742));

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("RuleJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("CustomerDiscounts");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 8, 20, 47, 39, 181, DateTimeKind.Local).AddTicks(6526));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 181, DateTimeKind.Local).AddTicks(7279),
                            IsDeleted = false,
                            Type = "Mağaza Çalışanı"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 181, DateTimeKind.Local).AddTicks(7285),
                            IsDeleted = false,
                            Type = "Mağaza Üyesi"
                        });
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 8, 20, 47, 39, 182, DateTimeKind.Local).AddTicks(2068));

                    b.Property<int>("DiscountRate")
                        .HasColumnType("int");

                    b.Property<string>("DiscountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 182, DateTimeKind.Local).AddTicks(2827),
                            DiscountRate = 30,
                            DiscountType = "Yüzde",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 182, DateTimeKind.Local).AddTicks(2832),
                            DiscountRate = 10,
                            DiscountType = "Yüzde",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 182, DateTimeKind.Local).AddTicks(2833),
                            DiscountRate = 5,
                            DiscountType = "Yüzde",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillingUserId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 8, 20, 47, 39, 182, DateTimeKind.Local).AddTicks(7045));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("NetAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 8, 20, 47, 39, 183, DateTimeKind.Local).AddTicks(2245));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 8, 20, 47, 39, 183, DateTimeKind.Local).AddTicks(6213));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 8, 20, 47, 39, 184, DateTimeKind.Local).AddTicks(716));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 184, DateTimeKind.Local).AddTicks(1591),
                            IsDeleted = false,
                            Name = "Gardırop",
                            Price = 3000m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 184, DateTimeKind.Local).AddTicks(1596),
                            IsDeleted = false,
                            Name = "Fırın",
                            Price = 4000m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 184, DateTimeKind.Local).AddTicks(1598),
                            IsDeleted = false,
                            Name = "Fıstık Ezmesi",
                            Price = 85m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreatedBy = "EVREN AKTAŞ",
                            CreatedOn = new DateTime(2024, 2, 8, 20, 47, 39, 184, DateTimeKind.Local).AddTicks(1599),
                            IsDeleted = false,
                            Name = "ModeLight Işıl 3'lü Avize",
                            Price = 4000m
                        });
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Customer", b =>
                {
                    b.HasOne("ShopsRU.Domain.Entities.CustomerType", "CustomerType")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.CustomerDiscount", b =>
                {
                    b.HasOne("ShopsRU.Domain.Entities.CustomerType", "CustomerType")
                        .WithMany("CustomerDiscounts")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopsRU.Domain.Entities.Discount", "Discounts")
                        .WithMany("CustomerDiscounts")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");

                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("ShopsRU.Domain.Entities.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopsRU.Domain.Entities.Order", "Order")
                        .WithMany("Invoices")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("ShopsRU.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopsRU.Domain.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Product", b =>
                {
                    b.HasOne("ShopsRU.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.CustomerType", b =>
                {
                    b.Navigation("CustomerDiscounts");

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Discount", b =>
                {
                    b.Navigation("CustomerDiscounts");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Order", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ShopsRU.Domain.Entities.Product", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
